actor-system-registry: {
  eu-inn-0: {
    actor-system-name: eu-inn-cluster
    actor-system-key: eu-inn-0
    log-messages: true
    deque-dispatcher: {
      executor = "thread-pool-executor"
      type = Dispatcher
    }
    akka {
      loggers = ["akka.event.slf4j.Slf4jLogger"]
      loglevel = "DEBUG"
      actor {
        provider = "akka.cluster.ClusterActorRefProvider"
        deque-dispatcher.mailbox-type = "akka.dispatch.UnboundedDequeBasedMailbox"
        debug {
          receive = on
          autoreceive = on
          lifecycle = on
        }
      }
      remote {
        log-remote-lifecycle-events = off
        netty.tcp {
          hostname = "127.0.0.1"
          port = 2550
        }
      }

      cluster {
        seed-nodes = [
          "akka.tcp://eu-inn-cluster@127.0.0.1:2550"
        ]
        auto-down-unreachable-after = off
        roles = ["revault"]
      }

      contrib.cluster.pub-sub {
        name = distributedPubSubMediator
        role = ""
        gossip-interval = 1s
        removed-time-to-live = 120s
      }
    }
  }

  eu-inn-1: {
    actor-system-name: eu-inn-cluster
    actor-system-key: eu-inn-1
    log-messages: true
    deque-dispatcher: {
      executor = "thread-pool-executor"
      type = Dispatcher
    }
    akka {
      loggers = ["akka.event.slf4j.Slf4jLogger"]
      loglevel = "DEBUG"
      actor {
        provider = "akka.cluster.ClusterActorRefProvider"
        deque-dispatcher.mailbox-type = "akka.dispatch.UnboundedDequeBasedMailbox"
        debug {
          receive = on
          autoreceive = on
          lifecycle = on
        }
      }
      remote {
        log-remote-lifecycle-events = off
        netty.tcp {
          hostname = "127.0.0.1"
          port = 2551
        }
      }

      cluster {
        seed-nodes = [
          "akka.tcp://eu-inn-cluster@127.0.0.1:2551"
        ]
        auto-down-unreachable-after = off
        roles = ["revault"]
      }

      contrib.cluster.pub-sub {
        name = distributedPubSubMediator
        role = ""
        gossip-interval = 1s
        removed-time-to-live = 120s
      }
    }
  }

  eu-inn-2: {
    actor-system-name: eu-inn-cluster
    actor-system-key: eu-inn-2
    log-messages: true
    deque-dispatcher: {
      executor = "thread-pool-executor"
      type = Dispatcher
    }
    akka {
      loggers = ["akka.event.slf4j.Slf4jLogger"]
      loglevel = "DEBUG"
      actor {
        provider = "akka.cluster.ClusterActorRefProvider"
        deque-dispatcher.mailbox-type = "akka.dispatch.UnboundedDequeBasedMailbox"
        debug {
          receive = on
          autoreceive = on
          lifecycle = on
        }
      }
      remote {
        log-remote-lifecycle-events = off
        netty.tcp {
          hostname = "127.0.0.1"
          port = 2552
        }
      }

      cluster {
        seed-nodes = [
          "akka.tcp://eu-inn-cluster@127.0.0.1:2551"
        ]
        auto-down-unreachable-after = off
        roles = ["revault"]
      }

      contrib.cluster.pub-sub {
        name = distributedPubSubMediator
        role = ""
        gossip-interval = 1s
        removed-time-to-live = 120s
      }
    }
  }
}

hyperbus-0: {
  hyperbus: {
    transports: {
      akka-cluster-client: {
        class-name: DistributedAkkaClientTransport,
        configuration: ${actor-system-registry.eu-inn-0}
      },
      akka-cluster-server: {
        class-name: DistributedAkkaServerTransport,
        configuration: ${actor-system-registry.eu-inn-0}
      },
      fault-client: {
        class-name: mock.FaultClientTransport,
      }
    },
    client-routes: [
      {
        uri-filter: {
          pattern: { value: "/revault/{path:*}/feed", match-type: Specific }
          args: {
            path: { value: "/faulty", match-type: Specific }
          }
        },
        filters: {
          method: { value: "feed:.*", match-type: Regex },
        },
        transport: fault-client
      },
      {
        uri.pattern.match-type: Any
        transport: akka-cluster-client
      }
    ],
    server-routes: [
      {
        match-type: Any
        transport: akka-cluster-server
      }
    ]
  }
}

hyperbus-1: {
  hyperbus: {
    transports: {
      akka-cluster-client: {
        class-name: DistributedAkkaClientTransport,
        configuration: ${actor-system-registry.eu-inn-1}
      },
      akka-cluster-server: {
        class-name: DistributedAkkaServerTransport,
        configuration: ${actor-system-registry.eu-inn-1}
      }
    },
    client-routes: [
      {
        match-type: Any
        transport: akka-cluster-client
      }
    ],
    server-routes: [
      {
        match-type: Any
        transport: akka-cluster-server
      }
    ]
  }
}

hyperbus-2: {
  hyperbus: {
    transports: {
      akka-cluster-client: {
        class-name: DistributedAkkaClientTransport,
        configuration: ${actor-system-registry.eu-inn-2}
      },
      akka-cluster-server: {
        class-name: DistributedAkkaServerTransport,
        configuration: ${actor-system-registry.eu-inn-2}
      }
    },
    client-routes: [
      {
        match-type: Any
        transport: akka-cluster-client
      }
    ],
    server-routes: [
      {
        match-type: Any
        transport: akka-cluster-server
      }
    ]
  }
}
