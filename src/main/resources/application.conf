revault: {
  max-workers: 1024
  max-completers: 256
  shutdown-timeout:     30s
  shards-sync-time:     1s
  completer-timeout:    2m      // minutes to wait for completion
  request-timeout:      1m
  fail-timeout:         3m      // If older then transaction considered failed and we try to recover it with hot-recovery, should be less than `hot-recovery`
  hot-recovery:         30m     // tried to recovery in hot-mode (more often), should be less than `oldest-recovery`
  hot-recovery-retry:   10s     // when retry after recovery fail
  stale-recovery:       1d      // If there is no checkpoint for the partition then we start recovering from oldest. stale-recovery configuration
  stale-recovery-retry: 1m      // when retry after recovery fail
}

cassandra: {
  hosts: [127.0.0.1]
  datacenter: ""
  connect-timeout: 10000
  read-timeout: 30000
}

actor-system-registry: {
  eu-inn: {
    actor-system: eu-inn
    akka {
      loggers = ["akka.event.slf4j.Slf4jLogger"]
      //loglevel = "DEBUG"
      //debug.receive = "DEBUG"
      actor {
        provider = "akka.cluster.ClusterActorRefProvider"
      }
      remote {
        log-remote-lifecycle-events = off
        netty.tcp {
          hostname = "127.0.0.1"
          port = 0
        }
      }
      cluster {
        seed-nodes = [
          "akka.tcp://eu-inn@127.0.0.1:10000"
        ]
        roles = ["revault"]
        auto-down-unreachable-after = off
      }
      contrib.cluster.pub-sub {
        name = distributedPubSubMediator
        role = ""
        gossip-interval = 1s
        removed-time-to-live = 120s
      }
    }
  }
}

hyperbus: {
  transports: {
    akka-cluster-client: {
      class-name: DistributedAkkaClientTransport,
      configuration: ${actor-system-registry.eu-inn}
    },
    akka-cluster-server: {
      class-name: DistributedAkkaServerTransport,
      configuration: ${actor-system-registry.eu-inn}
    }
  },
  client-routes: [
    {
      uri.pattern.match-type: Any
      transport: akka-cluster-client
    }
  ],
  server-routes: [
    {
      uri.pattern.match-type: Any
      transport: akka-cluster-server
    }
  ]
}
